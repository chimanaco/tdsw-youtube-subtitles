0:00:00.039,0:00:08.890
[Music]

0:00:09.519,0:00:14.190
Hello, everyone.
TDSW YouTube Channel.

0:00:14.190,0:00:21.360
This will be the tenth episode of Getting started with GLSL on TouchDesigner.
Thank you for watching!

0:00:21.360,0:00:29.299
This time, in response to the TOP you're looking at right now, we're going to use
We will make one that is rotating and scaling

0:00:29.590,0:00:33.730
We use Ramp TOP's Radial for our in-betweens.

0:00:33.754,0:00:40.511
In the third installment, I was scaling up and down by putting a float on uv.
We'll use the matrix here.

0:00:40.535,0:00:44.317
What we're going to do this time.
First of all, the rotation with the matrix.

0:00:44.342,0:00:49.650
Further scaling with matrices
Those are the two points.

0:00:49.650,0:00:52.760
So let's get to it.

0:00:52.785,0:00:59.238
This time, sir.
We'll start with this ramp as an input

0:00:59.263,0:01:07.155
Ramp has a 720x720 resolution.

0:01:07.179,0:01:14.698
This is a 1280x720
Input to this GLSL TOP

0:01:14.722,0:01:21.100
And here's the thing.
Since we are normalizing from -1 to 1

0:01:21.530,0:01:25.706
Zero is the center point.
Here it is.

0:01:25.730,0:01:31.811
So here's how it works.
It's going to be placed here like 0 to 1

0:01:31.836,0:01:34.632
It's a queue at GLSL.

0:01:34.657,0:01:42.095
You can use three types, mat2, mat3, and mat4, and
These are used in conjunction with vector

0:01:42.120,0:01:47.808
I have to warn you, though.
vec2 when using mat2 and vec3 when using mat3

0:01:47.832,0:01:52.498
And so on.
You'll need to use the last number together

0:01:52.522,0:01:57.650
As far as the matrix is concerned in this series.
I'm just trying to use it for now.

0:01:57.650,0:02:03.254
We'll do this while we look at this page in The Book of Shaders
Right here.

0:02:03.279,0:02:06.247
Here is a simple translate first

0:02:06.271,0:02:12.220
You don't have to use the queue to do this.
I'm not going to cover it this time.

0:02:12.220,0:02:16.824
Here's the spin of the shank
There's a formula in the rotation section.

0:02:16.849,0:02:21.333
This is the formula for the rotation matrix
And you know what?

0:02:21.358,0:02:27.915
This expression can be expressed like this on GLSL
Let's write a little bit about this.

0:02:27.940,0:02:32.540
This time we'll start from the beginning and write it as a function

0:02:32.565,0:02:41.076
mat2 rotate2d(float angle)

0:02:41.100,0:02:52.991
return mat2
cos(angle)

0:02:53.016,0:03:02.251
-sin(angle)

0:03:02.852,0:03:06.588
sin(angle)

0:03:06.613,0:03:13.104
cos(angle)

0:03:13.129,0:03:17.215
Okay.

0:03:19.720,0:03:24.270
I'm getting an error and would like to fix it.

0:03:29.300,0:03:32.857
That's fixed.
The function has now been declared

0:03:32.882,0:03:37.250
We will use this in the main function

0:03:37.250,0:03:42.400
Usage.
Multiply this p by the function you created

0:03:42.425,0:03:48.386
rotate2d()

0:03:48.411,0:03:54.100
I want to add some movement to this one too.
I'd like to put in some time.

0:03:54.100,0:04:00.360
Not yet, of course.
Declare it here.

0:04:06.373,0:04:09.691
If you put in Load Uniform Names, you can use the

0:04:09.715,0:04:13.470
I'm not in it.
Let's just write it down.

0:04:13.494,0:04:19.448
If you put something like absTime.frame in here, you can put

0:04:19.473,0:04:23.386
Oh, you're not doing it right here.
Like this.

0:04:23.410,0:04:30.162
It's so fast.
I'm going to slow this down a bit.

0:04:30.187,0:04:34.720
This is how I can rotate now.

0:04:35.849,0:04:41.430
That's the central point of this GLSL right now.
There's been a rotation.

0:04:41.430,0:04:49.440
This is normalized from -1 to 1, so
The rotation is supposed to take place in the center of the whole

0:04:50.682,0:04:54.380
Let's look at this in uv.

0:04:58.301,0:05:05.551
It's like this.
That the 0's revolve around here and here.

0:05:05.576,0:05:08.740
That's what it looks like.

0:05:12.680,0:05:20.270
This one, sir.
If you want to turn this input in the center of the image, you can use

0:05:21.070,0:05:24.780
Before this rotation.

0:05:24.805,0:05:35.449
You can shift it around.
We'll put it back in when it rotates.

0:05:35.449,0:05:40.235
This way, in the middle of this image.
It's supposed to rotate.

0:05:43.467,0:05:52.524
This is your choice.
This time I'd like to try to turn it in the middle.

0:05:57.160,0:06:00.870
It's a little sad.

0:06:01.610,0:06:06.706
Set the GLSL Input Extend Mode UV to Repeat

0:06:06.731,0:06:10.885
This way, it all comes out in a tiled shape.
That's what it means.

0:06:10.909,0:06:16.636
Then there's the scaling.
On the same page of The Book of Shaders, there is a description

0:06:16.661,0:06:19.784
Right here.
There's a place on this scale.

0:06:19.809,0:06:26.952
This is the formula for the matrix, even though it's a 3D one.
This is what the formula looks like if you make it 2D

0:06:26.977,0:06:30.970
I'd like to write this down.

0:06:34.547,0:06:45.492
mat2 scale(vec2 scale)
It comes as an argument.

0:06:45.517,0:06:57.070
return mat2(scale.x,
0.0, 0.0, scale.y)

0:06:57.070,0:07:02.755
This is the way it's done.
Something else.

0:07:02.780,0:07:09.634
Well, now we have a function for scaling.
We'll be able to use this in the main function as well

0:07:11.126,0:07:30.943
p *= scale() e.g. vec2's
If you make 1 or 2 here or there, you're going to reduce the size.

0:07:31.052,0:07:40.453
Put a fract function in here.
We'll put in the time.

0:07:40.477,0:07:43.995
Then the animation would look like this

0:07:44.020,0:07:50.446
A fract is a 0 to 1
Precisely because it takes a number between 0 and as close to 1 as possible.

0:07:50.471,0:07:56.660
It returns a number that is a decimal point lower than
It's a loop like this.

0:07:57.520,0:08:04.145
I'm trying to get a little bigger.

0:08:04.170,0:08:07.864
Like this.
I'm on three.

0:08:07.889,0:08:12.903
I'm going to try to reverse the direction for a moment.
I'm going to subtract.

0:08:12.928,0:08:15.730
It goes like this.

0:08:17.193,0:08:22.199
Let's see what's happening with this again with uv

0:08:23.200,0:08:29.780
The center is right here.
You can see that the uv values have increased

0:08:44.260,0:08:48.801
This is what I showed you first.
I got about the same thing.

0:08:48.826,0:08:53.580
Now you can play with it by adjusting various values.

0:08:53.580,0:08:55.636
That's all for this time.

0:08:55.660,0:09:01.850
About twice a month at TDSW.
We're running live streaming workshops on the weekend.

0:09:01.850,0:09:06.422
Tickets are available through Petix and Eventbrite!

0:09:06.447,0:09:12.645
We also use Patreon
There are currently three plans available

0:09:12.670,0:09:18.076
You can find these links in the video overview section of the video
Check it out if you'd like.

0:09:18.100,0:09:20.843
So thank you for watching.

0:09:20.868,0:09:25.930
If you like it, Good Button and
Please subscribe to our channel!

0:09:25.955,0:09:27.016
goodbye

0:09:28.083,0:09:41.656
[Music]